// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Registration.Repository;

#nullable disable

namespace Registration.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241127181108_decimalPrecision")]
    partial class decimalPrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Additional")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Additional");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Country");

                    b.Property<string>("District")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("District");

                    b.Property<int>("Number")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Street");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Additional = "",
                            City = "São Lourenço",
                            Country = "Brasil",
                            District = "Centro",
                            Number = 780,
                            State = "Minas Gerais",
                            Street = "Rua Dr Ribeiro da Luz",
                            ZipCode = "37470-000"
                        },
                        new
                        {
                            Id = 2,
                            Additional = "Prédio 1",
                            City = "Itaguai",
                            Country = "Brasil",
                            District = "Mesquita",
                            Number = 258,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "13710-000"
                        },
                        new
                        {
                            Id = 3,
                            Additional = "Prédio 2",
                            City = "Rio de Janeiro",
                            Country = "Brasil",
                            District = "Nilopolis",
                            Number = 1039,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "13770-000"
                        },
                        new
                        {
                            Id = 4,
                            Additional = "s/n",
                            City = "Lambari",
                            Country = "Brasil",
                            District = "Centro",
                            Number = 780,
                            State = "Minas Gerais",
                            Street = "Rua Dr Ribeiro da Luz",
                            ZipCode = "37471-000"
                        },
                        new
                        {
                            Id = 5,
                            Additional = "",
                            City = "Caxambu",
                            Country = "Brasil",
                            District = "Mesquita",
                            Number = 2518,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "14710-000"
                        },
                        new
                        {
                            Id = 6,
                            Additional = "via duto",
                            City = "Baipendi",
                            Country = "Brasil",
                            District = "Pedras",
                            Number = 13,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "11710-000"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstPastorId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstSecretaryId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstTreasurerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InaugurationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("InaugurationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RegisterDate");

                    b.Property<int?>("SecondPastorId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondSecretaryId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondTreasurerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("FirstPastorId")
                        .IsUnique();

                    b.HasIndex("FirstSecretaryId")
                        .IsUnique();

                    b.HasIndex("FirstTreasurerId")
                        .IsUnique();

                    b.HasIndex("SecondPastorId")
                        .IsUnique();

                    b.HasIndex("SecondSecretaryId")
                        .IsUnique();

                    b.HasIndex("SecondTreasurerId")
                        .IsUnique();

                    b.HasIndex(new[] { "Acronym" }, "IX_Church_Acronym")
                        .IsUnique();

                    b.ToTable("Church", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "SLC",
                            AddressId = 1,
                            InaugurationDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CEO São Lourenço",
                            RegisterDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "CRT",
                            AddressId = 2,
                            InaugurationDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CEP Cristina",
                            RegisterDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "LBR",
                            AddressId = 3,
                            InaugurationDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CEP Lambari",
                            RegisterDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.FirstFruits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<string>("Photo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Photo");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("FirstFruits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7745),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 2,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7773),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 3,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7775),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 4,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7777),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 5,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2024, 10, 28, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7778),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 6,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 10, 23, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7781),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 7,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 10, 18, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7783),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 8,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2024, 10, 13, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7785),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 9,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 10, 8, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7786),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 10,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 9, 28, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7789),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 11,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2024, 9, 18, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7791),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 12,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 9, 8, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7792),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 13,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 8, 29, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7794),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 14,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2024, 8, 19, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7795),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 15,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 8, 14, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(7797),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MeetingKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("MeetingKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Culto dos dias quinta com oração para libertação",
                            Name = "Culto de Libertação"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Culto do último domingo do mês com ministração da Santa Ceia do Senhor",
                            Name = "Culto de Santa Ceia"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Culto do 4º domingo do mês (quando haver 5 domingos). Culto para convidar o amigo ",
                            Name = "Culto de Centésima Ovelha"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Culto do 2º domingo do mês. Culto das primicias e dizímos",
                            Name = "Culto de Prosperidade"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Culto do 3º domingo do mês. Ofertas serão destinas às missões",
                            Name = "Culto de Missões"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Culto do 1º domingo do mês. Culto de poder, glória e batismo e renovo do Espirito Santo",
                            Name = "Culto do Poder"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Culto em meio a semana. Culto em outros dias da semana. Redes e Eventos",
                            Name = "Culto de Celebração"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<DateTime>("DateBaptism")
                        .HasColumnType("DATE")
                        .HasColumnName("DateBaptism");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DateBirth");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("DATE")
                        .HasColumnName("DateRegister");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Photo");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex(new[] { "Code" }, "IX_Member_Code")
                        .IsUnique();

                    b.ToTable("Member", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChurchId = 1,
                            Code = "SLC-866E0D",
                            DateBaptism = new DateTime(2024, 11, 17, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2317),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2287),
                            DateRegister = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2397),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 2,
                            ChurchId = 2,
                            Code = "SLC-EB1FE0",
                            DateBaptism = new DateTime(2024, 11, 12, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2409),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2408),
                            DateRegister = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2430),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 3,
                            ChurchId = 1,
                            Code = "SLC-9A0AC5",
                            DateBaptism = new DateTime(2024, 11, 7, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2435),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2432),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2439),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 4,
                            ChurchId = 1,
                            Code = "SLC-D72A69",
                            DateBaptism = new DateTime(2024, 11, 2, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2442),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2441),
                            DateRegister = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2502),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 5,
                            ChurchId = 2,
                            Code = "SLC-9F06BB",
                            DateBaptism = new DateTime(2024, 10, 28, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2505),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2504),
                            DateRegister = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2510),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 6,
                            ChurchId = 1,
                            Code = "SLC-857292",
                            DateBaptism = new DateTime(2024, 10, 23, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2515),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2515),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2521),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 7,
                            ChurchId = 1,
                            Code = "SLC-52F92B",
                            DateBaptism = new DateTime(2024, 10, 18, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2524),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2523),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2529),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 8,
                            ChurchId = 2,
                            Code = "SLC-DB40CA",
                            DateBaptism = new DateTime(2024, 10, 13, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2532),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2531),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2536),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 9,
                            ChurchId = 1,
                            Code = "SLC-6F0A42",
                            DateBaptism = new DateTime(2024, 10, 8, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2539),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2538),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2543),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 10,
                            ChurchId = 1,
                            Code = "SLC-4293A5",
                            DateBaptism = new DateTime(2024, 10, 3, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2547),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2546),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2587),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 11,
                            ChurchId = 2,
                            Code = "SLC-3D37EA",
                            DateBaptism = new DateTime(2024, 9, 28, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2590),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2589),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2594),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 12,
                            ChurchId = 1,
                            Code = "SLC-53E713",
                            DateBaptism = new DateTime(2024, 9, 23, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2597),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2596),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2601),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 13,
                            ChurchId = 1,
                            Code = "SLC-10C25F",
                            DateBaptism = new DateTime(2024, 9, 18, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2604),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2603),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2608),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 14,
                            ChurchId = 2,
                            Code = "SLC-312525",
                            DateBaptism = new DateTime(2024, 9, 13, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2610),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2609),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2615),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 15,
                            ChurchId = 1,
                            Code = "SLC-20FCDB",
                            DateBaptism = new DateTime(2024, 9, 8, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2617),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2616),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2622),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 16,
                            ChurchId = 1,
                            Code = "SLC-1ED451",
                            DateBaptism = new DateTime(2024, 9, 3, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2624),
                            DateBirth = new DateTime(2004, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2623),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2629),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 17,
                            ChurchId = 2,
                            Code = "SLC-F2BE85",
                            DateBaptism = new DateTime(2024, 8, 29, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2631),
                            DateBirth = new DateTime(2000, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2630),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2635),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 18,
                            ChurchId = 1,
                            Code = "SLC-22C92D",
                            DateBaptism = new DateTime(2024, 8, 24, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2639),
                            DateBirth = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2639),
                            DateRegister = new DateTime(2006, 11, 27, 15, 11, 8, 432, DateTimeKind.Local).AddTicks(2646),
                            Name = "Manuela Martins de Jesus"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("ChurchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ChurchName");

                    b.Property<string>("LastPost")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LastPost");

                    b.Property<string>("LetterReceiver")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LetterReceiver");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberIn", (string)null);
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<DateOnly>("Day")
                        .HasMaxLength(50)
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Reason");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberOut", (string)null);
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("PostId")
                        .HasColumnType("INT")
                        .HasColumnName("PostId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PostId");

                    b.ToTable("MemberPost", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MemberId = 1,
                            PostId = 5
                        },
                        new
                        {
                            Id = 2,
                            MemberId = 1,
                            PostId = 2
                        },
                        new
                        {
                            Id = 3,
                            MemberId = 1,
                            PostId = 10
                        },
                        new
                        {
                            Id = 4,
                            MemberId = 2,
                            PostId = 6
                        },
                        new
                        {
                            Id = 5,
                            MemberId = 2,
                            PostId = 9
                        },
                        new
                        {
                            Id = 6,
                            MemberId = 2,
                            PostId = 4
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MonthWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<decimal>("FinalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("FinalValue");

                    b.Property<decimal>("InitialValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("InitialValue");

                    b.Property<int>("YearMonth")
                        .HasColumnType("INT")
                        .HasColumnName("YearMonth");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId", "YearMonth")
                        .IsUnique()
                        .HasDatabaseName("IX_Church_YearMonth");

                    b.ToTable("MonthWork", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChurchId = 1,
                            FinalValue = 0m,
                            InitialValue = 0m,
                            YearMonth = 202301
                        },
                        new
                        {
                            Id = 2,
                            ChurchId = 1,
                            FinalValue = 0m,
                            InitialValue = 0m,
                            YearMonth = 202302
                        },
                        new
                        {
                            Id = 3,
                            ChurchId = 1,
                            FinalValue = 0m,
                            InitialValue = 0m,
                            YearMonth = 202303
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Offering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("AdultQuantity")
                        .HasColumnType("INT")
                        .HasColumnName("AdultQuantity");

                    b.Property<int>("ChildrenQuantity")
                        .HasColumnType("INT")
                        .HasColumnName("ChildrenQuantity");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MeetingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("MeetingKindId");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<string>("Photo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Photo");

                    b.Property<string>("PreacherMemberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PreacherMemberName");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MeetingKindId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("Offering", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3364),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 2,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/04",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3398),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 3,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3400),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 4,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3402),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 5,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/01",
                            Day = new DateTime(2024, 10, 28, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3404),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 6,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2024, 10, 23, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3408),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 7,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/04",
                            Day = new DateTime(2024, 10, 18, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3409),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 8,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/03",
                            Day = new DateTime(2024, 10, 13, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3411),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 9,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2024, 10, 8, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3413),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 10,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/01",
                            Day = new DateTime(2024, 10, 3, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3416),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 11,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/05",
                            Day = new DateTime(2024, 9, 28, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3418),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 12,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/04",
                            Day = new DateTime(2024, 9, 23, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3420),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 13,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2024, 9, 18, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3421),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 14,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/02",
                            Day = new DateTime(2024, 9, 13, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3423),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 15,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/01",
                            Day = new DateTime(2024, 9, 8, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3425),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 16,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2024, 9, 3, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3426),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 17,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/04",
                            Day = new DateTime(2024, 8, 29, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3428),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 18,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2024, 8, 24, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3431),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 19,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2024, 8, 19, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3453),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 20,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/01",
                            Day = new DateTime(2024, 8, 14, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3455),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 21,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2024, 8, 4, 15, 11, 8, 434, DateTimeKind.Local).AddTicks(3456),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OfferingKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("OfferingKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Oferta de amor com pix",
                            Name = "PIX"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Oferta de amor com Cédulas",
                            Name = "Cédulas"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Oferta de amor com cartão crédito/débito",
                            Name = "Crédito/Débito"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Oferta de amor com TED/DOC",
                            Name = "Transferência"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Amount");

                    b.Property<ulong>("Authorized")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Authorized");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Discount");

                    b.Property<decimal>("Interest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Interest");

                    b.Property<int>("OutFlowKindId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("OutFlowKindId");

                    b.ToTable("OutFlow", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 17, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4788),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 12, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4892),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 7, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4905),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 2, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4928),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 28, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4932),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 23, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4938),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 7,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 18, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4942),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 8,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 13, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4946),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 9,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 8, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4949),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 10,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 3, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4955),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 11,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 28, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4959),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 12,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 23, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4962),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 13,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 18, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4966),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 14,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 13, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4970),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 15,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 8, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4973),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 16,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 9, 3, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4977),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 17,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 8, 29, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4980),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 18,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 8, 21, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4986),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 19,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 8, 19, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4990),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 20,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 17, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4994),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 21,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 9, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(4997),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 22,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 8, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5001),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 23,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 7, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5007),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 24,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 4, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5010),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 25,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 12, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5014),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 26,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 11, 7, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5046),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 27,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "11/2024",
                            Day = new DateTime(2024, 10, 28, 18, 11, 8, 433, DateTimeKind.Utc).AddTicks(5050),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlowKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("OutFlowKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Conta de Luz",
                            Name = "Energia"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Conta de água",
                            Name = "Água"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Produto de limpeza",
                            Name = "Zeladoria"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Oferta de gratidão para ministrante convidado",
                            Name = "Auxilio Ministrante"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pessoa visitante eventual",
                            Name = "Visitante avulso"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pessoa visitante frenquente",
                            Name = "Visitante frequente"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Membro batisado com ficha",
                            Name = "Membro"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Membro batisado lider espiritual e administrativo da Igreja",
                            Name = "Visitante frequente"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Membro batisado pertencente ao grupo de louvor",
                            Name = "Levita"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Membro batisado ajudante nos cultos",
                            Name = "Obreiro"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Membro batisado cooperador da obra",
                            Name = "Diacono"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Membro batisado auxiliador do pastor",
                            Name = "Preisbitero"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Membro batisado lider espiritual e lider administrativo da Igreja",
                            Name = "Pastor responsável"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Membro batisado lider espiritual da Igreja",
                            Name = "Pastor Auxiliar"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Membro batisado lider da cobertura espiritual",
                            Name = "Bispo"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Membro batisado porém transferido sob benção para outra igreja",
                            Name = "Transferido"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Membro batisado porém afastado da igreja",
                            Name = "Desligado"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Membro batisado responsável pelo gerenciamento contábil da igreja",
                            Name = "Primeiro tesoureiro"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Membro batisado sub-responsável pelo gerenciamento contábil da igreja",
                            Name = "Segundo tesoureito"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Membro batisado responsável pela organização documental e numeros estatisticos da igreja",
                            Name = "Primeiro secretario"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Membro batisado sub-responsável pela organização documental e numeros estatisticos da igreja",
                            Name = "Segundo tesoureito"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Membro cooperador na organização, limpeza e zelo dos bens físicos da igreja",
                            Name = "Zeladoria"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Membro batisado responsável por uma celula",
                            Name = "Lider de celula"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Membro batisado sub-responsável por uma celula",
                            Name = "Vice-lider de celula"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Membro batisado responsável pelo louvor da igreja",
                            Name = "Lider de louvor"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Membro batisado sub-responsável pelo louvor da igreja",
                            Name = "Vice-lider de louvor"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "L-SCT",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "L-TRS",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "M-SCT",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "M-TRS",
                            RoleId = 0
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Tithes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<string>("Photo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Photo");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("Tithes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(632),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 2,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(661),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 3,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(663),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 4,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(665),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 5,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(667),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 6,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(670),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 7,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(672),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 8,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(673),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 9,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(675),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 10,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(678),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 11,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(679),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 12,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(681),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 13,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(682),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 14,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(684),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 15,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(685),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 16,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(687),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 17,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2024, 11, 17, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(688),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 18,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2024, 11, 12, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(691),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 19,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 7, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(692),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 20,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2024, 11, 2, 15, 11, 8, 435, DateTimeKind.Local).AddTicks(694),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(true)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex(new[] { "Code" }, "IX_User_Code")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChurchId = 1,
                            Code = "0AB55C",
                            Name = "Rodolfo de Jesus",
                            PasswordHash = "10000.Rf7SrO4/sOrqco8lszNpJQ==.tMOk6fwr1Dqz+EnQjRTF7kFrg73Sakr0x9tJHUtO0fM="
                        },
                        new
                        {
                            Id = 2,
                            ChurchId = 2,
                            Code = "80D38D",
                            Name = "Kelly Cristina Martins",
                            PasswordHash = "10000.QDtThbfILtttORn8aHZKyg==.yUdSwJ9/PjC8d79h/yJA1RI49AainH8Mt7yK1+lI1Kk="
                        },
                        new
                        {
                            Id = 3,
                            ChurchId = 1,
                            Code = "5311EF",
                            Name = "Cintia Gomes",
                            PasswordHash = "10000.4zHK0wuklOjmxSx84cl4SA==.Goge30PMUrYcmz4kJiyNMLyGSbycHIEaiUxkP4nwnUI="
                        },
                        new
                        {
                            Id = 4,
                            ChurchId = 1,
                            Code = "7E28EB",
                            Name = "Fernando Groler",
                            PasswordHash = "10000.N9vKVgeA8ESg1HGdR5A8cg==.CEsPhJu9bZesWGNMSR91aZl2jcDSxs+FdFqjM5dKT2Q="
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("RoleId")
                        .HasColumnType("INT")
                        .HasColumnName("RoleId");

                    b.Property<int>("UserId")
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            RoleId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            RoleId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            RoleId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            RoleId = 4,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Church_Address");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "FirstPastor")
                        .WithOne("ChurchFirstPastor")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "FirstPastorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "FirstSecretary")
                        .WithOne("ChurchFirstSecretary")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "FirstSecretaryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "FirstTreasuser")
                        .WithOne("ChurchFirstTreasurer")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "FirstTreasurerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "SecondPastor")
                        .WithOne("ChurchSecondPastor")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "SecondPastorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "SecondSecretary")
                        .WithOne("ChurchSecondSecretary")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "SecondSecretaryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "SecondTreasuser")
                        .WithOne("ChurchSecondTreasurer")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "SecondTreasurerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");

                    b.Navigation("FirstPastor");

                    b.Navigation("FirstSecretary");

                    b.Navigation("FirstTreasuser");

                    b.Navigation("SecondPastor");

                    b.Navigation("SecondSecretary");

                    b.Navigation("SecondTreasuser");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.FirstFruits", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("FirstFruits")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithMany("FirstFruits")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Member");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("FirstFruits")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("Member");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Members")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Member_Church");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberIn", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithOne("MemberIn")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.MemberIn", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberOut", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithOne("MemberOut")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.MemberOut", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberPost", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Members")
                        .WithMany("MemberPost")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Members_MemberPost");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Post", "Posts")
                        .WithMany("MemberPost")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Posts_MemberPost");

                    b.Navigation("Members");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MonthWork", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("MonthWorks")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_MonthWorks_Church");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Offering", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Offerings")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.MeetingKind", "MeetingKind")
                        .WithMany("Offerings")
                        .HasForeignKey("MeetingKindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_MeetingKind");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", null)
                        .WithMany("Offerings")
                        .HasForeignKey("MemberId");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("Offerings")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("MeetingKind");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlow", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("OutFlows")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_OutFlow-Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OutFlowKind", "OutFlowKind")
                        .WithMany("OutFlows")
                        .HasForeignKey("OutFlowKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_OutFlowKind-OutFlow");

                    b.Navigation("Church");

                    b.Navigation("OutFlowKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Tithes", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Tithes")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithMany("Tithes")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Member");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("Tithes")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("Member");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Users")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_User_Church");

                    b.OwnsOne("Registration.DomainBase.Aggregate.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(255)
                                .HasColumnType("VARCHAR")
                                .HasDefaultValue("")
                                .HasColumnName("email");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Church");

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.UserRole", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Role_UserRole");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Users_UserRole");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.Navigation("FirstFruits");

                    b.Navigation("Members");

                    b.Navigation("MonthWorks");

                    b.Navigation("Offerings");

                    b.Navigation("OutFlows");

                    b.Navigation("Tithes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MeetingKind", b =>
                {
                    b.Navigation("Offerings");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.Navigation("ChurchFirstPastor");

                    b.Navigation("ChurchFirstSecretary");

                    b.Navigation("ChurchFirstTreasurer");

                    b.Navigation("ChurchSecondPastor");

                    b.Navigation("ChurchSecondSecretary");

                    b.Navigation("ChurchSecondTreasurer");

                    b.Navigation("FirstFruits");

                    b.Navigation("MemberIn");

                    b.Navigation("MemberOut");

                    b.Navigation("MemberPost");

                    b.Navigation("Offerings");

                    b.Navigation("Tithes");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OfferingKind", b =>
                {
                    b.Navigation("FirstFruits");

                    b.Navigation("Offerings");

                    b.Navigation("Tithes");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlowKind", b =>
                {
                    b.Navigation("OutFlows");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Post", b =>
                {
                    b.Navigation("MemberPost");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
