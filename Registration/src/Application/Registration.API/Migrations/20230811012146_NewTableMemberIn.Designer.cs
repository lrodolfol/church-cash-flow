// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Registration.Repository;

#nullable disable

namespace Registration.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230811012146_NewTableMemberIn")]
    partial class NewTableMemberIn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additional")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Additional");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Country");

                    b.Property<string>("District")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("District");

                    b.Property<int>("Number")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Street");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Additional = "",
                            City = "São Lourenço",
                            Country = "Brasil",
                            District = "Centro",
                            Number = 780,
                            State = "Minas Gerais",
                            Street = "Rua Dr Ribeiro da Luz",
                            ZipCode = "37470-000"
                        },
                        new
                        {
                            Id = 2,
                            Additional = "Prédio 1",
                            City = "Itaguai",
                            Country = "Brasil",
                            District = "Mesquita",
                            Number = 258,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "13710-000"
                        },
                        new
                        {
                            Id = 3,
                            Additional = "Prédio 2",
                            City = "Rio de Janeiro",
                            Country = "Brasil",
                            District = "Nilopolis",
                            Number = 1039,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "13770-000"
                        },
                        new
                        {
                            Id = 4,
                            Additional = "s/n",
                            City = "Lambari",
                            Country = "Brasil",
                            District = "Centro",
                            Number = 780,
                            State = "Minas Gerais",
                            Street = "Rua Dr Ribeiro da Luz",
                            ZipCode = "37471-000"
                        },
                        new
                        {
                            Id = 5,
                            Additional = "",
                            City = "Caxambu",
                            Country = "Brasil",
                            District = "Mesquita",
                            Number = 2518,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "14710-000"
                        },
                        new
                        {
                            Id = 6,
                            Additional = "via duto",
                            City = "Baipendi",
                            Country = "Brasil",
                            District = "Pedras",
                            Number = 13,
                            State = "Rio de Janeiro",
                            Street = "Avenida André Chaves",
                            ZipCode = "11710-000"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("longtext");

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Church", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "SLC",
                            Active = 1ul,
                            AddressId = 1,
                            Name = "CEO São Lourenço"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "CRT",
                            Active = 1ul,
                            AddressId = 2,
                            Name = "CEP Cristina"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "LBR",
                            Active = 1ul,
                            AddressId = 3,
                            Name = "CEP Lambari"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.FirstFruits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("FirstFruits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1890),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1944),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1946),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1947),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2023, 7, 11, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1948),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 6, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1950),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 1, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1951),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2023, 6, 26, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1952),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 6, 21, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1957),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 6, 11, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1959),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2023, 6, 1, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1960),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 5, 22, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1961),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 5, 12, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1962),
                            Description = "Primicias do irmao/irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 56.60m
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03 /2023",
                            Day = new DateTime(2023, 5, 2, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1963),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 565.60m
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 4, 27, 22, 21, 45, 778, DateTimeKind.Local).AddTicks(1964),
                            Description = "Primicias do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 2,
                            TotalAmount = 156.60m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MeetingKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("MeetingKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Description = "Culto dos dias quinta com oração para libertação",
                            Name = "Culto de Libertação"
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Description = "Culto do último domingo do mês com ministração da Santa Ceia do Senhor",
                            Name = "Culto de Santa Ceia"
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Description = "Culto do 4º domingo do mês (quando haver 5 domingos). Culto para convidar o amigo ",
                            Name = "Culto de Centésima Ovelha"
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Description = "Culto do 2º domingo do mês. Culto das primicias e dizímos",
                            Name = "Culto de Prosperidade"
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            Description = "Culto do 3º domingo do mês. Ofertas serão destinas às missões",
                            Name = "Culto de Missões"
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            Description = "Culto do 1º domingo do mês. Culto de poder, glória e batismo e renovo do Espirito Santo",
                            Name = "Culto do Poder"
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            Description = "Culto em meio a semana. Culto em outros dias da semana. Redes e Eventos",
                            Name = "Culto de Celebração"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<DateTime>("DateBaptism")
                        .HasColumnType("DATE")
                        .HasColumnName("DateBaptism");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DateBirth");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("DATE")
                        .HasColumnName("DateRegister");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Photo");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex(new[] { "Code" }, "IX_Member_Code")
                        .IsUnique();

                    b.ToTable("Member", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-CBAFE1",
                            DateBaptism = new DateTime(2023, 7, 31, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3356),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3333),
                            DateRegister = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3392),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-BECD39",
                            DateBaptism = new DateTime(2023, 7, 26, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3401),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3401),
                            DateRegister = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3405),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-078508",
                            DateBaptism = new DateTime(2023, 7, 21, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3407),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3407),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3411),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-996633",
                            DateBaptism = new DateTime(2023, 7, 16, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3412),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3412),
                            DateRegister = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3423),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-A90424",
                            DateBaptism = new DateTime(2023, 7, 11, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3425),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3425),
                            DateRegister = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3435),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-25B648",
                            DateBaptism = new DateTime(2023, 7, 6, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3437),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3437),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3442),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-9E7758",
                            DateBaptism = new DateTime(2023, 7, 1, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3443),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3443),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3447),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-F5B7B7",
                            DateBaptism = new DateTime(2023, 6, 26, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3448),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3448),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3452),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-784FEF",
                            DateBaptism = new DateTime(2023, 6, 21, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3454),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3453),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3457),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-97227D",
                            DateBaptism = new DateTime(2023, 6, 16, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3460),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3459),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3487),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-9EF6E2",
                            DateBaptism = new DateTime(2023, 6, 11, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3489),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3489),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3493),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-3361BC",
                            DateBaptism = new DateTime(2023, 6, 6, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3495),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3494),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3499),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-65AB76",
                            DateBaptism = new DateTime(2023, 6, 1, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3500),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3500),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3506),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-B0665D",
                            DateBaptism = new DateTime(2023, 5, 27, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3508),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3507),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3511),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-762C5D",
                            DateBaptism = new DateTime(2023, 5, 22, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3513),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3513),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3517),
                            Name = "Manuela Martins de Jesus"
                        },
                        new
                        {
                            Id = 16,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-18E262",
                            DateBaptism = new DateTime(2023, 5, 17, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3518),
                            DateBirth = new DateTime(2003, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3518),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3522),
                            Name = "Rodolfo de Jesus Silva"
                        },
                        new
                        {
                            Id = 17,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "SLC-2089FC",
                            DateBaptism = new DateTime(2023, 5, 12, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3524),
                            DateBirth = new DateTime(1999, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3523),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3527),
                            Name = "Kelly Cristina Martins"
                        },
                        new
                        {
                            Id = 18,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "SLC-64341A",
                            DateBaptism = new DateTime(2023, 5, 7, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3530),
                            DateBirth = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3529),
                            DateRegister = new DateTime(2005, 8, 10, 22, 21, 45, 776, DateTimeKind.Local).AddTicks(3533),
                            Name = "Manuela Martins de Jesus"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("ChurchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ChurchName");

                    b.Property<string>("LastPost")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LastPost");

                    b.Property<string>("LetterReceiver")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LetterReceiver");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberIn", (string)null);
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<DateOnly>("Day")
                        .HasMaxLength(50)
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Reason");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberOut", (string)null);
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("PostId")
                        .HasColumnType("INT")
                        .HasColumnName("PostId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PostId");

                    b.ToTable("MemberPost", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            MemberId = 1,
                            PostId = 5
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            MemberId = 1,
                            PostId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            MemberId = 1,
                            PostId = 10
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            MemberId = 2,
                            PostId = 6
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            MemberId = 2,
                            PostId = 9
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            MemberId = 2,
                            PostId = 4
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MonthWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<ulong>("Block")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Block");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<int>("YearMonth")
                        .HasColumnType("INT")
                        .HasColumnName("YearMonth");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId", "YearMonth")
                        .IsUnique()
                        .HasDatabaseName("IX_Church_YearMonth");

                    b.ToTable("MonthWork", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Block = 1ul,
                            ChurchId = 1,
                            YearMonth = 202301
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Block = 1ul,
                            ChurchId = 1,
                            YearMonth = 202302
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Block = 1ul,
                            ChurchId = 1,
                            YearMonth = 202303
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Offering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("AdultQuantity")
                        .HasColumnType("INT")
                        .HasColumnName("AdultQuantity");

                    b.Property<int>("ChildrenQuantity")
                        .HasColumnType("INT")
                        .HasColumnName("ChildrenQuantity");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MeetingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("MeetingKindId");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<string>("PreacherMemberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PreacherMemberName");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MeetingKindId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("Offering", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4047),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/04",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4071),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4072),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4073),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/01",
                            Day = new DateTime(2023, 7, 11, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4074),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2023, 7, 6, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4076),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/04",
                            Day = new DateTime(2023, 7, 1, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4077),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/03",
                            Day = new DateTime(2023, 6, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4078),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2023, 6, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4079),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/01",
                            Day = new DateTime(2023, 6, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4081),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/05",
                            Day = new DateTime(2023, 6, 11, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4082),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/04",
                            Day = new DateTime(2023, 6, 6, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4084),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2023, 6, 1, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4085),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/02",
                            Day = new DateTime(2023, 5, 27, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4086),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/01",
                            Day = new DateTime(2023, 5, 22, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4087),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 16,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2023, 5, 17, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4088),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 17,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/04",
                            Day = new DateTime(2023, 5, 12, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4089),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 18,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/03",
                            Day = new DateTime(2023, 5, 7, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4090),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        },
                        new
                        {
                            Id = 19,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/02",
                            Day = new DateTime(2023, 5, 2, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4091),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 1,
                            OfferingKindId = 1,
                            PreacherMemberName = "Pr Antônio Cristino Alves",
                            TotalAmount = 55.90m
                        },
                        new
                        {
                            Id = 20,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 2,
                            Competence = "2023/01",
                            Day = new DateTime(2023, 4, 27, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4092),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 2,
                            OfferingKindId = 2,
                            PreacherMemberName = "Obª Kelly Cristina Martins",
                            TotalAmount = 326.05m
                        },
                        new
                        {
                            Id = 21,
                            Active = 1ul,
                            AdultQuantity = 25,
                            ChildrenQuantity = 4,
                            ChurchId = 1,
                            Competence = "2023/05",
                            Day = new DateTime(2023, 4, 17, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(4093),
                            Description = "oferta do irmao / irma",
                            MeetingKindId = 3,
                            OfferingKindId = 3,
                            PreacherMemberName = "Dcª Iolanda da Silva Souza",
                            TotalAmount = 12.80m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OfferingKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("OfferingKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Description = "Oferta de amor com pix",
                            Name = "PIX"
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Description = "Oferta de amor com Cédulas",
                            Name = "Cédulas"
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Description = "Oferta de amor com cartão crédito/débito",
                            Name = "Crédito/Débito"
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Description = "Oferta de amor com TED/DOC",
                            Name = "Transferência"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Amount");

                    b.Property<ulong>("Authorized")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Authorized");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Discount");

                    b.Property<decimal>("Interest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Interest");

                    b.Property<int>("OutFlowKindId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("OutFlowKindId");

                    b.ToTable("OutFlow", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 8, 1, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9803),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 27, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9876),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 22, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9881),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 17, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9884),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 12, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9887),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 7, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9891),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 2, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9893),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 27, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9896),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 22, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9899),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 17, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9903),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 12, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9906),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 7, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9909),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 6, 2, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9911),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 28, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9917),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 23, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9920),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 16,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 18, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9923),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 17,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 13, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9926),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 18,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 5, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9929),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 19,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 5, 3, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9932),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 20,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 8, 1, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9934),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 21,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 24, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9937),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 22,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 23, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9940),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 23,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 22, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9943),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 24,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 19, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9946),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        },
                        new
                        {
                            Id = 25,
                            Active = 1ul,
                            Amount = 100m,
                            Authorized = 1ul,
                            ChurchId = 1,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 27, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9948),
                            Description = "Saida de caixa 1",
                            Discount = 0m,
                            Interest = 2m,
                            OutFlowKindId = 1,
                            TotalAmount = 102m
                        },
                        new
                        {
                            Id = 26,
                            Active = 1ul,
                            Amount = 1000.01m,
                            Authorized = 1ul,
                            ChurchId = 2,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 22, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9951),
                            Description = "Saida de caixa 2",
                            Discount = 0m,
                            Interest = 1.56m,
                            OutFlowKindId = 2,
                            TotalAmount = 1001.57m
                        },
                        new
                        {
                            Id = 27,
                            Active = 1ul,
                            Amount = 1500.56m,
                            Authorized = 1ul,
                            ChurchId = 3,
                            Competence = "08/2023",
                            Day = new DateTime(2023, 7, 12, 1, 21, 45, 776, DateTimeKind.Utc).AddTicks(9954),
                            Description = "Saida de caixa 3",
                            Discount = 20m,
                            Interest = 0.6m,
                            OutFlowKindId = 3,
                            TotalAmount = 1481.16m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlowKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("OutFlowKind", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Description = "Conta de Luz",
                            Name = "Energia"
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Description = "Conta de água",
                            Name = "Água"
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Description = "Produto de limpeza",
                            Name = "Zeladoria"
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Description = "Oferta de gratidão para ministrante convidado",
                            Name = "Auxilio Ministrante"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Description = "Pessoa visitante eventual",
                            Name = "Visitante avulso"
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Description = "Pessoa visitante frenquente",
                            Name = "Visitante frequente"
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Description = "Membro batisado com ficha",
                            Name = "Membro"
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Description = "Membro batisado lider espiritual e administrativo da Igreja",
                            Name = "Visitante frequente"
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            Description = "Membro batisado pertencente ao grupo de louvor",
                            Name = "Levita"
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            Description = "Membro batisado ajudante nos cultos",
                            Name = "Obreiro"
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            Description = "Membro batisado cooperador da obra",
                            Name = "Diacono"
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            Description = "Membro batisado auxiliador do pastor",
                            Name = "Preisbitero"
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            Description = "Membro batisado lider espiritual e lider administrativo da Igreja",
                            Name = "Pastor responsável"
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            Description = "Membro batisado lider espiritual da Igreja",
                            Name = "Pastor Auxiliar"
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            Description = "Membro batisado lider da cobertura espiritual",
                            Name = "Bispo"
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            Description = "Membro batisado porém transferido sob benção para outra igreja",
                            Name = "Transferido"
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            Description = "Membro batisado porém afastado da igreja",
                            Name = "Desligado"
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            Description = "Membro batisado responsável pelo gerenciamento contábil da igreja",
                            Name = "Primeiro tesoureiro"
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            Description = "Membro batisado sub-responsável pelo gerenciamento contábil da igreja",
                            Name = "Segundo tesoureito"
                        },
                        new
                        {
                            Id = 16,
                            Active = 1ul,
                            Description = "Membro batisado responsável pela organização documental e numeros estatisticos da igreja",
                            Name = "Primeiro secretario"
                        },
                        new
                        {
                            Id = 17,
                            Active = 1ul,
                            Description = "Membro batisado sub-responsável pela organização documental e numeros estatisticos da igreja",
                            Name = "Segundo tesoureito"
                        },
                        new
                        {
                            Id = 18,
                            Active = 1ul,
                            Description = "Membro cooperador na organização, limpeza e zelo dos bens físicos da igreja",
                            Name = "Zeladoria"
                        },
                        new
                        {
                            Id = 19,
                            Active = 1ul,
                            Description = "Membro batisado responsável por uma celula",
                            Name = "Lider de celula"
                        },
                        new
                        {
                            Id = 20,
                            Active = 1ul,
                            Description = "Membro batisado sub-responsável por uma celula",
                            Name = "Vice-lider de celula"
                        },
                        new
                        {
                            Id = 21,
                            Active = 1ul,
                            Description = "Membro batisado responsável pelo louvor da igreja",
                            Name = "Lider de louvor"
                        },
                        new
                        {
                            Id = 22,
                            Active = 1ul,
                            Description = "Membro batisado sub-responsável pelo louvor da igreja",
                            Name = "Vice-lider de louvor"
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            Name = "L-SCT",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            Name = "L-TRS",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            Name = "M-SCT",
                            RoleId = 0
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            Name = "M-TRS",
                            RoleId = 0
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Tithes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("INT")
                        .HasColumnName("ChurchId");

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Competence");

                    b.Property<DateTime>("Day")
                        .HasColumnType("DATE")
                        .HasColumnName("Day");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("MemberId")
                        .HasColumnType("INT")
                        .HasColumnName("MemberId");

                    b.Property<int>("OfferingKindId")
                        .HasColumnType("INT")
                        .HasColumnName("OfferingKindId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OfferingKindId");

                    b.ToTable("Tithes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7728),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7750),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7751),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7752),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7753),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7755),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7756),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 8,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7758),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 9,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7759),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 10,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7760),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 11,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7761),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 12,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7762),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 13,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7763),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 14,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7784),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 15,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7785),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 16,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7787),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 17,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "04/2023",
                            Day = new DateTime(2023, 7, 31, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7788),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 1,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 18,
                            Active = 1ul,
                            ChurchId = 2,
                            Competence = "03/2023",
                            Day = new DateTime(2023, 7, 26, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7790),
                            Description = "dizimo do irmao / irma",
                            MemberId = 2,
                            OfferingKindId = 1,
                            TotalAmount = 533.45m
                        },
                        new
                        {
                            Id = 19,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 21, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7791),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        },
                        new
                        {
                            Id = 20,
                            Active = 1ul,
                            ChurchId = 1,
                            Competence = "02/2023",
                            Day = new DateTime(2023, 7, 16, 22, 21, 45, 777, DateTimeKind.Local).AddTicks(7792),
                            Description = "dizimo do irmao / irma",
                            MemberId = 1,
                            OfferingKindId = 2,
                            TotalAmount = 33.45m
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(true)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex(new[] { "Code" }, "IX_User_Code")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "8ED2D2",
                            Name = "Rodolfo de Jesus",
                            PasswordHash = "10000.q2MZXM1OEKGZRy4MNXXFhQ==.FXz/cyPO3Tpc4dzOaMXoy+eEU53+GYjLfBwy/sdyYek="
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            ChurchId = 2,
                            Code = "9D4769",
                            Name = "Kelly Cristina Martins",
                            PasswordHash = "10000.giNgNdtC7S8xTKCnfvLLfA==.LGl/wlrm6JpU4QWoUUcUfQSQrMN7FZpfSWhfXi3hZUY="
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "6AE043",
                            Name = "Flavia Maciel",
                            PasswordHash = "10000.tEZd5oWWW1261veQwhq2lg==.Heh193/bZU/7T+TD0EiOPa6b25pg12VjPJYPOu2TNYg="
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            ChurchId = 1,
                            Code = "03F456",
                            Name = "Ricardo Groof",
                            PasswordHash = "10000.lZIlIzB/sLKlf0R9U6EHlQ==.1zHSSsO9rCZziC3WD1y1nyX4emLJnm5cVef1PUUCSRQ="
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(1ul)
                        .HasColumnName("Active");

                    b.Property<int>("RoleId")
                        .HasColumnType("INT")
                        .HasColumnName("RoleId");

                    b.Property<int>("UserId")
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 1ul,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = 1ul,
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = 1ul,
                            RoleId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = 1ul,
                            RoleId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Active = 1ul,
                            RoleId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Active = 1ul,
                            RoleId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Active = 1ul,
                            RoleId = 4,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.Church", "AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Church_Address");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.FirstFruits", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("FirstFruits")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithMany("FirstFruits")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Member");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("FirstFruits")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_FirstFruits_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("Member");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Members")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Member_Church");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberIn", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithOne("MemberIn")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.MemberIn", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberOut", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithOne("MembersOut")
                        .HasForeignKey("Registration.DomainBase.Entities.Registrations.MemberOut", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MemberPost", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Members")
                        .WithMany("MemberPost")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Members_MemberPost");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Post", "Posts")
                        .WithMany("MemberPost")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Posts_MemberPost");

                    b.Navigation("Members");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MonthWork", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("MonthWorks")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_MonthWorks_Church");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Offering", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Offerings")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.MeetingKind", "MeetingKind")
                        .WithMany("Offerings")
                        .HasForeignKey("MeetingKindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_MeetingKind");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", null)
                        .WithMany("Offerings")
                        .HasForeignKey("MemberId");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("Offerings")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Offering_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("MeetingKind");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlow", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("OutFlows")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_OutFlow-Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OutFlowKind", "OutFlowKind")
                        .WithMany("OutFlows")
                        .HasForeignKey("OutFlowKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_OutFlowKind-OutFlow");

                    b.Navigation("Church");

                    b.Navigation("OutFlowKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Tithes", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Tithes")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Church");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.Member", "Member")
                        .WithMany("Tithes")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Member");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.OfferingKind", "OfferingKind")
                        .WithMany("Tithes")
                        .HasForeignKey("OfferingKindId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Tithes_Offering_Kind");

                    b.Navigation("Church");

                    b.Navigation("Member");

                    b.Navigation("OfferingKind");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Church", "Church")
                        .WithMany("Users")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_User_Church");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.UserRole", b =>
                {
                    b.HasOne("Registration.DomainBase.Entities.Registrations.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Role_UserRole");

                    b.HasOne("Registration.DomainBase.Entities.Registrations.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Users_UserRole");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Church", b =>
                {
                    b.Navigation("FirstFruits");

                    b.Navigation("Members");

                    b.Navigation("MonthWorks");

                    b.Navigation("Offerings");

                    b.Navigation("OutFlows");

                    b.Navigation("Tithes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.MeetingKind", b =>
                {
                    b.Navigation("Offerings");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Member", b =>
                {
                    b.Navigation("FirstFruits");

                    b.Navigation("MemberIn");

                    b.Navigation("MemberPost");

                    b.Navigation("MembersOut");

                    b.Navigation("Offerings");

                    b.Navigation("Tithes");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OfferingKind", b =>
                {
                    b.Navigation("FirstFruits");

                    b.Navigation("Offerings");

                    b.Navigation("Tithes");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.OutFlowKind", b =>
                {
                    b.Navigation("OutFlows");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Post", b =>
                {
                    b.Navigation("MemberPost");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Registration.DomainBase.Entities.Registrations.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
